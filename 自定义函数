#include<stdio.h>
#include<string.h>
//函数定义（两个数的最大值）
int get_max(int x,int y)
{
	if(x>y)
		return x;
	else
		return y;
}
int main()
{
	int a=10;
	int b=20;
	//函数的使用
	int max=get_max(a,b);
	printf("max=%d\n",max);
	max=get_max(100,300);
	printf("max=%d\n",max);

	return 0;
}
利用取址来换位
#include<stdio.h>
#include<string.h>
//函数定义（利用取址来换位）
void swap2(int *pa,int *pb)
{
	int tmp=0;
	tmp=*pa;
	*pa=*pb;
	*pb=tmp;
}
int main()
{
	int a=10;
	int b=20;
	printf("a=%d,b=%d\n",a,b);
	swap2(&a,&b);//取址打印
	printf("a=%d,b=%d",a,b);
	return 0;
}
定义素数
#include<stdio.h>
#include<math.h>
//定义函数
int is_prime(int n)
{
	int j;
	double sqrt(double x);
	for(j=2;j<=sqrt(n);j++)
	{
		if(n%j==0)
			return 0;
	}
	return 1;
}
int main()
{
	int i=0;
	for(i=100;i<=200;i++)
	{
		if(is_prime(i)==1)
			printf("%d",i);
	}

	return 0;
}
素数函数自定义
#include<stdio.h>
#include<string.h>
//定义函数
int is_leap_year(int y)
{
	if((y%4==0&&y%100!=0)||(y%400==0))
		return 1;
	else
		return 0;
}
int main()
{
	int year=0;
	for(year=1000;year<=2000;year++)
	{
		//判断year是否是闰年
		if(1==is_leap_year(year))
		{
			printf("%d",year);
		}
	}
	return 0;
}
查找下标
#include<stdio.h>
#include<string.h>
//定义函数
int sad_search(int arr[],int k,int sz)
{
	int letf=0;
	int right=sz-1;
	while(letf<=right)
	{
		int mid=(letf+right)/2;//中间元素的下标
		if(arr[mid]<k)
		{
			letf=mid+1;
		}
		else if(arr[mid]>k)
		{
			right=mid-1;
		}
		else
		{
			return mid;
		}
	}
	return -1;
}
int main()
{
	//二分查找
	//在一个有序数组中查找具体的某个数
	int arr[]={1,2,3,4,5,6,7,8,9,10};
	int k=7;
	int sz=sizeof(arr)/sizeof(arr[0]);
	//                    传递过去的是数组arr首元素的地址
	int ret=sad_search(arr,k,sz);
	if(ret==-1)
	{
		printf("找不到指定的数字\n");
	}
	else
		printf("找到了，下标是：%d\n",ret);

	return 0;
}
数字一个个加
#include<stdio.h>
#include<string.h>
//函数定义  重点：（*p）
void add(int* p)
{
	(*p)++;//不能*p++，需要加（）
}
int main()
{
	int num=0;
	add(&num);
	printf("%d\n",num);
	add(&num);
	printf("%d\n",num);
	return 0;
}
